#!/bin/bash -e

# Set your config options in "seamonkey.mozconfig" BEFORE running this script.

. /usr/share/LFSPkg/LFSFunctions

DEPENDS="alsa-lib-1.1.3 GTK-2.24.31 Zip-3.0 UnZip-6.0 yasm-1.3.0"
if ! lfspkg -B "$DEPENDS";then
	exit 100
fi

PKGNAME="seamonkey"
TARNAME="$PKGNAME"
VERSION="2.46"
BUILD=${BUILD:-1}
SECTION="NET"
SUFFIX="LFSPKG"
TARBALL="${TARNAME}-${VERSION}.source.tar.xz"

scriptLog "${PKGNAME}-${VERSION}"
gettar "http://ftp.mozilla.org/pub/mozilla.org/seamonkey/releases/${VERSION}/source/${TARBALL}" $SECTION

PKG="${OUTPUT}/${PKGNAME}"

DOWHAT=${1:-"build"}
rm -rf "$PKG" || true
mkdir -p "$PKG"
tar -xvf "${SOURCEARCHIVES}/${SECTION}/${TARBALL}"

pushd ${TARNAME}-${VERSION}
	cp ../seamonkey.mozconfig ./mozconfig
#set the lib suffix in the config file
	sed -i "s/libLIBDIRSUFFIX/lib${LIBDIRSUFFIX}/" mozconfig

	CFLAGS_HOLD=$CFLAGS
	CXXFLAGS_HOLD=$CXXFLAGS
	EXTRA_FLAGS=" -fno-delete-null-pointer-checks -fno-lifetime-dse -fno-schedule-insns2"
	export CFLAGS+=$EXTRA_FLAGS
	export CXXFLAGS+=$EXTRA_FLAGS
	export SHELL=/bin/sh
	unset EXTRA_FLAGS

	sed -e 's/256/224/' -i mozilla/netwerk/protocol/http/Http2Session.cpp &&
	sed -e '/version=/s/:space:/[&]/' -i ./mozilla/build/autoconf/icu.m4 &&
	sed -e s/_EVENT_SIZEOF/EVENT__SIZEOF/ -i mozilla/ipc/chromium/src/base/message_pump_libevent.cc

	make -f client.mk || exit 1
	make -f client.mk install INSTALL_SDK= DESTDIR=$PKG  || exit 1

	chown -R 0:0 $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}-${VERSION}||true
	mkdir -vp $PKG/usr/share/man/man1  $PKG/usr/share/{applications,pixmaps}|| true
	cp -v $(find -name seamonkey.1 | head -n1) $PKG/usr/share/man/man1

	export CFLAGS=$CFLAGS_HOLD
	export CXXFLAGS=$CXXFLAGS_HOLD
	unset CFLAGS_HOLD CXXFLAGS_HOLD

	ln -sfv /usr/lib/${PKGNAME}-${VERSION}/chrome/icons/default/seamonkey.png $PKG/usr/share/pixmaps
popd

checketc $PKG
packageclean "$PKG"

pushd "$PKG"
	/usr/bin/lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
popd

case $DOWHAT in
	up*)
		lfspkg "^${PKGNAME}-[0-9][0-9]*" "${OUTPUT}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
		;;
	"install")
		lfspkg "${OUTPUT}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
		;;
	"build")
		echo "Just built"
		;;
	*)
		echo "*** Unknown command ***"
		exit 1
esac

rm -r "$PKG" ${TARNAME}-${VERSION}
