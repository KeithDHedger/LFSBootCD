#!/bin/bash -e

. /usr/share/LFSPkg/LFSFunctions

DEPENDS="alsa-lib-1.1.3 GTK-2.24.31 Zip-3.0 UnZip-6.0 libevent-2.1.8 libvpx-1.6.1 NSPR-4.13.1 NSS-3.29 SQLite-3.17.0 yasm-1.3.0"
if ! lfspkg -B "$DEPENDS";then
	exit 100
fi

PKGNAME="thunderbird"
TARNAME="$PKGNAME"
VERSION="45.7.1"
BUILD=${BUILD:-1}
SECTION="DESKTOP"
SUFFIX="LFSPKG"
TARBALL="${TARNAME}-${VERSION}.source.tar.xz"

scriptLog "${PKGNAME}-${VERSION}"
gettar "https://ftp.mozilla.org/pub/mozilla.org/thunderbird/releases/${VERSION}/source/${TARBALL}" $SECTION

PKG="${OUTPUT}/${PKGNAME}"
DOWHAT=${1:-"build"}
rm -rf "$PKG" || true
mkdir -p "$PKG"
tar -xvf "${SOURCEARCHIVES}/${SECTION}/${TARBALL}"

pushd ${PKGNAME}-${VERSION}
	cp ../mozconfig.thunderbird mozconfig
#set the lib suffix in the config file
	sed -i "s/libLIBDIRSUFFIX/lib${LIBDIRSUFFIX}/" mozconfig
	sed -e s/_EVENT_SIZEOF/EVENT__SIZEOF/ -i mozilla/ipc/chromium/src/base/message_pump_libevent.cc
	
	sed -e '/#include/iprint OUT "#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS\\n"\;' -i mozilla/nsprpub/config/make-system-wrappers.pl
	sed -e '/#include/aprint OUT "#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS\\n"\;'-i mozilla/nsprpub/config/make-system-wrappers.pl

	export SHELL=/bin/sh
	make -f client.mk|| exit 1
	make -f client.mk install INSTALL_SDK= DESTDIR=$PKG|| exit 1
	chown -R 0:0 $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}-${VERSION}

	mkdir -pv $PKG/usr/share/applications $PKG/usr/share/pixmaps
	ln -sfv ../lib${LIBDIRSUFFIX}/${PKGNAME}-${VERSION}/thunderbird $PKG/usr/bin
	ln -sfv /usr/lib${LIBDIRSUFFIX}/${PKGNAME}-${VERSION}/chrome/icons/default/default256.png $PKG/usr/share/pixmaps/thunderbird.png
popd

checketc $PKG
packageclean "$PKG"

pushd "$PKG"
	/usr/bin/lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
popd

case $DOWHAT in
	up*)
		lfspkg "^${PKGNAME}-[0-9][0-9]*" "${OUTPUT}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
		;;
	"install")
		lfspkg "${OUTPUT}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
		;;
	"build")
		echo "Just built"
		;;
	*)
		echo "*** Unknown command ***"
		exit 1
esac

rm -r "$PKG" ${PKGNAME}-${VERSION}
