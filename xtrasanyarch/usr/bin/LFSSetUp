#!/bin/bash -e

#
# Â©K. D. Hedger. Mon 12 Jun 15:48:46 BST 2017 keithdhedger@gmail.com
#
# This file (LFSSetUp) is part of BootCD.
#
# BootCD is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# at your option) any later version.

# BootCD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with BootCD.  If not, see <http://www.gnu.org/licenses/>.
#

#$1=varname $2=message
readWithDefault ()
{
	local varname="$1"
	local varcontents="${!varname}"
	local message="$2"

	read -e -p "$message [ ${varcontents} ] "
	if [ "X$REPLY" != "X" ];then
		eval "${varname}=$REPLY"
	fi
}

PIBUILD=0
USESYSTEMD=0

#set default language
LANG=${LANG:-"en_GB"}

#cdrom mount point
CDROMMOUNT=${CDROMMOUNT:-/cdrom}
readWithDefault "CDROMMOUNT"  "Enter Mountpoint OF CDROM"

#Mount point for your new LFS system
LFS=${LFS:-"/mnt/LFS"}
readWithDefault "LFS"  "Enter Mountpoint For LFS"

#LFS Version
LFSVERSION=${LFSVERSION:-10.1}
readWithDefault "LFSVERSION"  "Enter Version"

case $(uname -m) in
	x86_64)
		LIBDIRSUFFIX=64
		LFSNAME=${LFSNAME:-"LFS${LFSVERSION//./}64"}
		;;
	*)
		LIBDIRSUFFIX=""
		LFSNAME=${LFSNAME:-"LFS${LFSVERSION//./}32"}
		;;
esac

#Computer name
readWithDefault "LFSNAME"  "Enter Hostname"

#cp files etc
cp -r ${CDROMMOUNT}/LFS/LFSPkgBuilds ${LFS}
ln -sfv LFSPkgBuilds/LFSPkgBuildScripts .

#LFS init type eithe bbinit or sysvinit
INITTYPE=${INITTYPE:-"sysvinit"}
readWithDefault "INITTYPE"  "Enter Init Type (LFSInit|systemd|sysvinit))"
if [ "$INITTYPE" = "systemd" ];then
	USESYSTEMD=1
	. ${LFS}/LFSPkgBuilds/LFSScripts/SystemDBuild/PkgVersions
	KERNELVERSION=${KERNELVERSION:-$linux_version}
else
	. ${LFS}/LFSPkgBuilds/LFSScripts/SysVBuild/PkgVersions
	KERNELVERSION=${KERNELVERSION:-$linux_version}
fi

#libdir suffix
readWithDefault "LIBDIRSUFFIX"  "Enter Suffix For Lib Folders"

#buildscripts location
BUILDSCRIPTS="/LFSPkgBuildScripts/"
#readWithDefault "BUILDSCRIPTS"  "Enter Folder For Build Scripts"

#Place to store built packages, defaults to /LFSBuiltPackages/${LFSVERSION}
BUILTPACKAGES=${BUILTPACKAGES:-"/LFSBuiltPackages/${LFSVERSION}"}
readWithDefault "BUILTPACKAGES"  "Enter Folder For Built Packages"

#Place to store downloaded source archives, defaults to /LFSSourceArchives/${LFSVERSION}
SOURCEARCHIVES=${SOURCEARCHIVES:-"/LFSSourceArchives/${LFSVERSION}"}
readWithDefault "SOURCEARCHIVES"  "Enter Folder For Source Archives"

#kernal version
#if the kernel version you want to use is not the same as the book you will have to manually download the source to $SOURCEARCHIVES
readWithDefault "KERNELVERSION"  "Enter Kernel Version"

#keyboard
#set keyboad lang for auto detect use
#KEYBOARD="$(setxkbmap -print | awk -F'+' '/xkb_symbols/ {print $2}')"
KEYBOARD=${KEYBOARD:-"uk"}
read -e -p "Enter Keyboard " -i "[ $KEYBOARD ] "

#File system type, probably ext2 or ext4
ROOTFSTYPE=${ROOTFSTYPE:-"ext2"}
readWithDefault "ROOTFSTYPE"  "Enter Root FS Type"

#Variable below this line are computed and probably don't need changing, but feel free.
#computed stuff

ROOTDEV=$(df|grep -i $LFS|awk '{print $1}')
readWithDefault "ROOTDEV"  "Enter Root Device"

SWAP=$(fdisk -l|grep swap|awk '{print $1}')
readWithDefault "SWAP"  "Enter Swap Device"

LANGUAGE=${LANGUAGE:-$LANG}
readWithDefault "LANGUAGE"  "Enter Language"

#network
IP=${IP:-"$(ifconfig |grep "inet addr"|head -n1|awk -F: '{print $2}'|awk '{print $1}'|sed 's/\(.*\)\..*$/\1/').$(echo $ROOTDEV|sed 's/^[a-zA-Z\/]*//')"}
readWithDefault "IP"  "Enter IP"

#Set up the network
GATEWAY=${GATEWAY:-"$(route |grep default|awk '{print $2}')"}
readWithDefault "GATEWAY"  "Enter Gateway IP"

SUBNET=${SUBNET:-"255.255.255.0"}
readWithDefault "SUBNET"  "Enter Subnet IP"

NAMESERVERS=${NAMESERVERS:-"208.67.222.222 208.67.220.220 8.8.8.8 $GATEWAY"}
readWithDefault "NAMESERVERS"  "Enter Name Servers IP List"

echo "----SUMMARY----"
echo "CDROMMOUNT=$CDROMMOUNT"
echo 
echo "LFS=$LFS"
echo "LFSVERSION=$LFSVERSION"
echo "LFSNAME=$LFSNAME"
echo "INITTYPE=$INITTYPE"
echo "USESYSTEMD=$USESYSTEMD"

echo "LIBDIRSUFFIX=$LIBDIRSUFFIX"
echo "BUILDSCRIPTS=$BUILDSCRIPTS"
echo "BUILTPACKAGES=$BUILTPACKAGES"
echo "SOURCEARCHIVES=$SOURCEARCHIVES"
echo "KERNELVERSION=$KERNELVERSION"
echo "KEYBOARD=$KEYBOARD"
echo "ROOTFSTYPE=$ROOTFSTYPE"
echo "ROOTDEV=$ROOTDEV"
echo "SWAP=$SWAP"

echo "LANGUAGE=$LANGUAGE"

echo "IP=$IP"
echo "GATEWAY=$GATEWAY"
echo "SUBNET=$SUBNET"
echo "NAMESERVERS=\"$NAMESERVERS\""
echo "--------"

SUMMARY="n"
readWithDefault "SUMMARY"  "Write Config Files And Copy Data Etc"

if [ $SUMMARY = "n" ];then
	exit 1
fi

pushd ${LFS}
	mkdir  -vp ${LFS}/${SOURCEARCHIVES}/KERNEL
	mkdir -vp "${LFS}/${SOURCEARCHIVES}" "${LFS}/$BUILTPACKAGES"
	case $(uname -m) in
		*64)
			tar -xvf ${CDROMMOUNT}/LFS/tools-${LFSVERSION}_64.tar.bz2
			;;
		*)
			tar -xvf ${CDROMMOUNT}/LFS/tools-${LFSVERSION}_32.tar.bz2
			;;
	esac

	if [ "$USESYSTEMD" -eq 0 ];then
		ln -snvf LFSPkgBuilds/LFSScripts/SysVBuild LFSScripts
		ln -snvf ../../../LFSScripts/PkgVersions LFSPkgBuilds/LFSPkgBuildScripts/system/PkgVersions
	else
		if [ "$INITTYPE" = "LFSInit" ];then
			ln -snvf LFSPkgBuilds/LFSScripts/LFSInitBuild LFSScripts
			ln -snvf ../../../LFSScripts/PkgVersions LFSPkgBuilds/LFSPkgBuildScripts/kernel/PkgVersions
		else
			ln -snvf LFSPkgBuilds/LFSScripts/SystemDBuild LFSScripts
			ln -snvf ../../../LFSScripts/PkgVersions LFSPkgBuilds/LFSPkgBuildScripts/kernel/PkgVersions
		fi	
	fi	
popd

cp -rv ${CDROMMOUNT}/LFS/LFSSourceArchives/${LFSVERSION}/* ${LFS}/$SOURCEARCHIVES

#set kernel version in build scripts
sed -ri 's/^VERSION="[0-9]+.[0-9]+.[0-9]+"/VERSION="'"${KERNELVERSION}"'"/' ${LFS}/${BUILDSCRIPTS}/kernel/kernel.LFSBuild
sed -ri 's/^VERSION="[0-9]+.[0-9]+.[0-9]+"/VERSION="'"${KERNELVERSION}"'"/' ${LFS}/${BUILDSCRIPTS}/kernel/firmware.LFSBuild

ln -svf system-${INITTYPE}-meta.LFSBuild ${LFS}/${BUILDSCRIPTS}/system/system-meta/system-meta.LFSBuild

pushd  ${LFS}/${SOURCEARCHIVES}/KERNEL
	ln -sv ../SYSTEM/linux-$KERNELVERSION.tar.xz linux-$KERNELVERSION.tar.xz
	ln -svfn ../../../LFSScripts/PkgVersions
popd

cat > $LFS/LFSScripts/SystemData.local << EOF
CDROMMOUNT=$CDROMMOUNT

LFS=$LFS
PIBUILD=$PIBUILD
PIVERS=$PIVERS
PIBOOTDEV=$PIBOOTDEV
PIROOTDEV=$PIROOTDEV
LFSNAME=$LFSNAME
LFSVERSION=$LFSVERSION
KERNELVERSION=$KERNELVERSION
INITTYPE=$INITTYPE
USESYSTEMD=$USESYSTEMD

LIBDIRSUFFIX=$LIBDIRSUFFIX
BUILTPACKAGES=$BUILTPACKAGES
SOURCEARCHIVES=$SOURCEARCHIVES
BUILDSCRIPTS=$BUILDSCRIPTS

KEYBOARD=$KEYBOARD
ROOTFSTYPE=$ROOTFSTYPE
ROOTDEV=$ROOTDEV
SWAP=$SWAP

LANGUAGE=$LANGUAGE

IP=$IP
GATEWAY=$GATEWAY
SUBNET=$SUBNET
NAMESERVERS="$NAMESERVERS"
EOF

mkdir -vp $LFS/etc||true
cat > $LFS/etc/lfspkg.rc << EOF
LFSVERSION=$LFSVERSION
OUTPUT=$PKGARCHIVES
SOURCEARCHIVES=$SOURCEARCHIVES
BUILDSCRIPTS=$BUILDSCRIPTS
COMPILEAT=$COMPILEAT
USESYSTEMD=$USESYSTEMD
PIBUILD=$PIBUILD
LANG=$LANGUAGE
EOF

rm ${LFS}/etc/fstab
cat > ${LFS}/etc/fstab << EOF
# Begin /etc/fstab

#file system	mount-point	type	options	dump	fsck order

$ROOTDEV	/	$ROOTFSTYPE	defaults	1	1
$SWAP	swap	swap	pri=1	0	0
proc	/proc	proc	nosuid,noexec,nodev	0	0
sysfs	/sys	sysfs	nosuid,noexec,nodev	0	0
devpts	/dev/pts	devpts	gid=5,mode=620	0	0
tmpfs	/run	tmpfs	defaults	0	0
devtmpfs	/dev	devtmpfs	mode=0755,nosuid	0	0

# End /etc/fstab
EOF

cat > ${LFS}/${BUILDSCRIPTS}/system/grub/grub.cfg << EOF
# Begin /boot/grub/grub.cfg

set default=0
set timeout=30

insmod ext2
set root=(hd0,$(echo $ROOTDEV|sed 's@^[/[:alpha:]]*@@'))

menuentry "$LFSNAME" {
    linux /boot/vmlinuz-${KERNELVERSION} root=$ROOTDEV ro
}
EOF
